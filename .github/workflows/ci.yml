name: CI
on:
  push:
  schedule:
    - cron: "0 14 * * 1-5"

jobs:
  test-install:
    name: "Install ${{ !matrix.stable && 'ðŸš§ ' || '' }}- os: ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ !matrix.stable }}
    strategy:
      fail-fast: false
      matrix:
        stable: [true]
        os:
          - ubuntu-latest
    steps:
      -
        name: Install PlaceOS
        shell: bash
        run: |
          PLACEOS_PRODUCT_BRANCH="${GITHUB_REF#refs/heads/}" \
          bash -c "$(
            curl --proto '=https' --tlsv1.2 -sSfL \
            https://raw.githubusercontent.com/PlaceOS/partner-environment/${{ github.sha }}/scripts/install
          )"
        env:
          TERM: xterm-256color
          VERBOSE: true
          PLACEOS_SKIP_INSTALL_OPEN: true
          PLACE_EMAIL: robot@place.tech
          PLACE_PASSWORD: development

  test-start:
    name: "Start ${{ !matrix.stable && 'ðŸš§ ' || '' }}- version: ${{ matrix.version != '' && matrix.version || 'empty'}}, os: ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ !matrix.stable }}
    strategy:
      fail-fast: false
      matrix:
        stable: [true]
        os:
          - ubuntu-latest
        version:
          - "" # Test an empty tag
          - placeos-2.2409.0
          - latest
        include:
          - version: nightly
            stable: false
            os: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Test initialization
        if: ${{ matrix.version != '' }} # Testing a set tag
        run: ./placeos start --verbose
        env:
          PLACEOS_TAG: ${{ matrix.version }}
          PLACE_EMAIL: robot@place.tech
          PLACE_PASSWORD: development
      - name: Test initialization, with unset PLACEOS_TAG
        if: ${{ matrix.version == '' }} # Testing an empty tag
        run: |
          ./placeos start --verbose
        env:
          PLACE_EMAIL: robot@place.tech
          PLACE_PASSWORD: development
      - name: Upload logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: logs-${{ matrix.os }}-${{ matrix.version }}-${{ github.sha }}
          path: .logs/*.log
      - name: List service statuses
        run: docker compose ps
      - name: Check API is reachable
        continue-on-error: true
        run: curl -S --retry 10 --tls-max 1 --insecure https://localhost:8443/api/engine/v2
      - name: Test raw `docker compose`
        run: docker compose down
