#!/usr/bin/env bash
set -eu
trap "exit" 2

RED='\033[0;31m'
NC='\033[0m'
script_name="$(basename "${0}")"
env_repo="partner-environment"
current_repo="$(basename "$(git --git-dir="./.git" remote get-url origin 2> /dev/null)")"
if [[ "${current_repo}" != "${env_repo}"* ]]
then
    printf "${RED}error:${NC} ${script_name} expected to be ran from root of the environment\n"
    exit 1
fi

HELP=$(cat <<EOF
Usage: ./restart [options]

restart must be run from the root of the environment.

Options:
    -e, --elk                        Set up ELK stack
    -r, --reset                      Reset the environment
    -s, --sentry                     Set up Sentry
EOF
)

SERVICES=('')

reset_environment=false
while [[ $# -gt 0 ]]
do
  arg="$1"
  case $arg in
    -r|--reset)
    reset_environment=true
    shift
    ;;
    -e|--elk)
    SERVICES+=('-e')
    shift
    ;;
    -s|--sentry)
    SERVICES+=('-s')
    shift
    ;;
    -h |--help | *)
      printf "$HELP\n"
      exit 1
    ;;
  esac
done

source .env
PLACE_DOMAIN=${PLACE_DOMAIN:="localhost:8443"}
PLACE_EMAIL=${PLACE_EMAIL:="support@place.tech"}
PLACE_PASSWORD=${PLACE_PASSWORD:="development"}

if [ ! -f ./ssl/default-domain/fullchain.pem  ]; then
    echo "=== Generating SSL certificates..."
    ./scripts/generate-ssl ${PLACE_DOMAIN} 2> /dev/null || (printf "\nfailed to generate SSL certificates\n" && exit 1)
fi

echo "=== Refreshing services..."
./scripts/start-services ${SERVICES[@]} || (printf "\nfailed to start services\n" && exit 1)

if [[ $reset_environment == "true" ]]
then
    printf "\n=== Waiting for RethinkDB and Elasticsearch..."
    sleep 10
    echo "done"

    printf "\n=== Dropping tables..."
    ./scripts/run-sam-task drop:db &> /dev/null || (printf "\nFailed to drop tables\n" && exit 1)
    echo " done"

    printf "\n=== Dropping elastic..."
    ./scripts/run-sam-task drop:elastic &> /dev/null ||  (printf "\nFailed to drop elastic indices\n" && exit 1)
    echo " done"

    echo "=== Initiating PlaceOS with default domain ($PLACE_DOMAIN)..."
    ./scripts/run-init-container ||  (printf "\nFailed to create user entity\n" && exit 1)

    COMPOSE_PROJECT_NAME=placeos docker-compose restart nginx
fi

echo -e "\n=== Restart complete. Login to http://$PLACE_DOMAIN/backoffice/ with"
echo "$PLACE_EMAIL:$PLACE_PASSWORD"
